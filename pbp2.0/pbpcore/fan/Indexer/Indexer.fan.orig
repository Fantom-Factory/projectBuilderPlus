using concurrent

const class Indexer
{
  //w
 Void indexProject(Project project)
 {
   /*
    project.siteDir.listFiles.each |file|
    {
     addDoc("dis", file.basename+":"+Record.fromFile(file).get("dis").val)
    }
    project.equipDir.listFiles.each |file|
    {
     addDoc("dis", file.basename+":"+Record.fromFile(file).get("dis").val)
    }
    project.pointDir.listFiles.each |file|
    {
     addDoc("dis", file.basename+":"+Record.fromFile(file).get("dis").val)
    }
<<<<<<< local
    project.weatherDir.listFiles.each |file|
    {
     addDoc("dis", file.basename+":"+Record.fromXml(file).get("dis").val)
    }
=======
    */
>>>>>>> other
 }
 **Note: This will overwrite the current index.
 **
  native Void index()

 **
  native Void addDoc(Str fieldname, Str value)
 **
 **Returns the stored value for a given field, when that has text inside it..
 **
  native Str query(Str fieldname, Str value)
 **
 **Closes the indexing session.
 **
  native Void close()
}